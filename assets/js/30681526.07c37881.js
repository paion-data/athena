"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[166],{6399:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var s=n(4848),i=n(8453);const a={title:"Client APIs",description:"JSON API and GraphQL Client APIs",sidebar_position:2},o=void 0,r={id:"clientapis/clientapis",title:"Client APIs",description:"JSON API and GraphQL Client APIs",source:"@site/docs/clientapis/clientapis.md",sourceDirName:"clientapis",slug:"/clientapis/",permalink:"/athena/docs/clientapis/",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/clientapis/clientapis.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Client APIs",description:"JSON API and GraphQL Client APIs",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Welcome",permalink:"/athena/docs/welcome"},next:{title:"JSON API",permalink:"/athena/docs/clientapis/jsonapi"}},l={},c=[];function d(e){const t={a:"a",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"Graph APIs are an evolution of web service APIs that serve and manipulate data for mobile & web applications. They have\na number of characteristics that make them well suited to this task:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["Most notably, they present a ",(0,s.jsx)(t.strong,{children:"data model"})," as an entity relationship graph and an ",(0,s.jsx)(t.strong,{children:"accompanying schema"}),".","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"A well-defined model allows for a consistent view of the data and a centralized way to manipulate an instance of\nthe model or to cache it."}),"\n",(0,s.jsx)(t.li,{children:"The schema provides powerful introspection capabilities that can be used to build tools to help developers understant\nand navigate the model."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["The API allows the client to ",(0,s.jsx)(t.strong,{children:"fetch or mutate as much or as little information in single roundtrip"})," between client\nand server. This also shrinks payload sizes and simplifies the process of schema evolution"]}),"\n",(0,s.jsxs)(t.li,{children:["There is a ",(0,s.jsx)(t.strong,{children:"well-defined standard"})," for the API that fosters a community approach to development of supporting tools\n& best practices."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Athena supports the two most widely adopted standards for graph APIs:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/athena/docs/clientapis/jsonapi",children:"JSON-API for File Operation"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"graphql",children:"GraphQL for File Meta Data Operation"})}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var s=n(6540);const i={},a=s.createContext(i);function o(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);